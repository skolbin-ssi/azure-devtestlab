{
  "$schema": "https://raw.githubusercontent.com/Azure/azure-devtestlab/master/schemas/2016-11-28/dtlArtifacts.json",
  "title": "Download Azure Artifacts Drop",
  "description": "Downloads an Azure Artifacts Drop",
  "tags": [
    "Windows",
    "Azure Pipelines"
  ],
  "iconUri": "https://code.benco.io/icon-collection/azure-patterns/downloads-alt.svg",
  "targetOsType": "Windows",
  "parameters": {
    "AccountURL": {
      "type": "string",
      "displayName": "Account URL",
      "description": "The URL of the drop service to download the Azure Artifacts Drop from (e.g. https://dev.azure.com/contoso)"
    },
    "DropName": {
      "type": "string",
      "displayName": "Drop Name",
      "description": "The name of the Azure Artifacts Drop to download (e.g. 'Foo/Bar/123456')"
    },
    "DestinationDirectory": {
      "type": "string",
      "displayName": "Destination Directory",
      "description": "Where to download the Azure Artifacts Drop to (e.g. C:\\Artifacts)"
    },
    "AccessToken": {
      "type": "securestring",
      "displayName": "Azure DevOps Access Token",
      "description": "OAuth or personal access token for downloading an Azure Artifacts Drop (required scopes: vso.drop_read).",
      "defaultValue": ""
    },
    "ManagedIdentityClientID": {
      "type": "string",
      "displayName": "Azure Managed Identity Client ID",
      "description": "The client ID of an Azure managed identity (registered as a valid Azure DevOps user) that has an access to Azure Artifacts Drop.",
      "defaultValue": ""
    },
    "LogsDirectory": {
      "type": "string",
      "displayName": "Logs Directory",
      "description": "The path of the directory where logs generated by this artifact will be written to.",
      "defaultValue": "%SYSTEMDRIVE%\\Logs"
    },
    "LogsDropServiceURL": {
      "type": "string",
      "displayName": "Logs Drop Service URL",
      "description": "The URL of the drop service to publish the log to (e.g. https://artifacts.dev.azure.com/contoso)",
      "defaultValue": ""
    },
    "LogsDropName": {
      "type": "string",
      "displayName": "Logs Drop Name",
      "description": "The name of the Azure Artifacts Drop where logs generated by this script will be uploaded to.",
      "defaultValue": ""
    },
    "LogsDropFilesToInclude": {
      "type": "string",
      "displayName": "Files to Upload to Logs Drop",
      "description": "File globs relative to the root directory and separated by ';' that specify files to upload to the logs drop at the end of artifact execution.",
      "defaultValue": ""
    },
    "LogsDropFilesToExclude": {
      "type": "string",
      "displayName": "Files to Exclude Upload to Logs Drop",
      "description": "File globs relative to the root directory and separated by ';' that specify files to exclude upload to the logs drop at the end of artifact execution.",
      "defaultValue": ""
    },
    "LogsDropServiceAccessToken": {
      "type": "securestring",
      "displayName": "Azure Artifacts Logs Drops Access Token",
      "description": "OAuth or personal access token for uploading logs to an Azure Artifacts Drop in the LogsDropServiceURL account (required scope: vso.drop_write).",
      "defaultValue": ""
    },
    "LogsDropServiceManagedIdentityClientID": {
      "type": "string",
      "displayName": "Azure Artifacts Logs Drop Azure Managed Identity Client ID",
      "description": "The client ID of an Azure managed identity (registered as a valid Azure DevOps user) that has an access to Azure Artifacts Logs Drop.",
      "defaultValue": ""
    },
    "IgnorePendingReboot": {
      "type": "string",
      "displayName": "Ignore Pending Reboot",
      "description": "Whether to ignore pending reboots from previous artifacts.",
      "defaultValue": "false"
    }
  },
  "runCommand": {
    "commandToExecute": "[concat('powershell.exe -ExecutionPolicy bypass \"& ./DownloadArtifactsDrop.ps1 -AccountURL ''', parameters('AccountURL'), ''' -DropName ''', parameters('DropName'), ''' -DestinationDirectory ([Environment]::ExpandEnvironmentVariables(''', parameters('DestinationDirectory'), '''))', if(equals(parameters('AccessToken'), ''), '', concat(' -AccessToken (ConvertTo-SecureString ''', parameters('AccessToken'), ''' -AsPlainText -Force)')), if(equals(parameters('ManagedIdentityClientID'), ''), '', concat(' -ManagedIdentityClientID ''', parameters('ManagedIdentityClientID'), '''')), ' -LogsDirectory ([Environment]::ExpandEnvironmentVariables(''', parameters('LogsDirectory'), '''))', if(equals(parameters('LogsDropServiceURL'), ''), '', concat(' -LogsDropServiceURL ''', parameters('LogsDropServiceURL'), '''')), if(equals(parameters('LogsDropName'), ''), '', concat(' -LogsDropName ''', parameters('LogsDropName'), '''')), if(equals(parameters('LogsDropFilesToInclude'), ''), '', concat(' -LogsDropFilesToInclude ''', parameters('LogsDropFilesToInclude'), '''')), if(equals(parameters('LogsDropFilesToExclude'), ''), '', concat(' -LogsDropFilesToExclude ''', parameters('LogsDropFilesToExclude'), '''')), if(equals(parameters('LogsDropServiceAccessToken'), ''), '', concat(' -LogsDropServiceAccessToken (ConvertTo-SecureString ''', parameters('LogsDropServiceAccessToken'), ''' -AsPlainText -Force)')), if(equals(parameters('LogsDropServiceManagedIdentityClientID'), ''), '', concat(' -LogsDropServiceManagedIdentityClientID ''', parameters('LogsDropServiceManagedIdentityClientID'), '''')), ' -IgnorePendingReboot:$', parameters('IgnorePendingReboot'), '\"')]"
  }
}